@inject NavigationManager NavigationManager 
@inject IDeleteProductUseCase DeleteProductUseCase

@if (Product != null)
{
    <tr>
        <td>@Product.ProductName</td>
        <td>@Product.Quantity</td>
        <td>@Product.Price.ToString("c")</td>
        <td>
            <button type="button" class="btn btn-light" @onclick="@(() => EditProduct(Product.ProductId))">Editar</button>
            <button type="button" class="btn btn-light" @onclick="@(async () => await DeleteProduct(Product))">Deletar</button>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Product? Product { get; set; }

    [Parameter]
    public EventCallback OnProductDeleted { get; set; }

    private void EditProduct(int prodId)
    {
        NavigationManager.NavigateTo($"/editproduct/{prodId}");
    }

    private async Task DeleteProduct(Product prod)
    {
        await DeleteProductUseCase.ExecuteAsync(prod.ProductId);
        await OnProductDeleted.InvokeAsync();
    }
}

  